function isSigned() {
  return request.auth != null
}

function isOwner(post) {
  return post.user.id == request.auth.uid
}

service cloud.firestore {

  match /databases/{database}/documents {

    match /topics/{topicId} {
      allow read, update: if isSigned()

      match /posts/{postId} {
        allow read: if isSigned()
        allow create: if (isSigned()
                          && isOwner(request.resource.data))
      }

      match /users/{userId} {
        allow read: if isSigned()
      }

    }
  
    match /posts/{postId} {
      allow create: if (isSigned()
                        && isOwner(request.resource.data))
      allow read, update: if isSigned()

      match /ratings/{userId} {
        allow create, update, read: if (isSigned()
                        && userId == request.auth.uid)
      }

    }

    match /users/{userId} {
      allow read, update: if isSigned()

      match /feed/{postId} {
        allow read: if (isSigned()
                        && userId == request.auth.uid)
      }

      match /posts/{postId} {
        allow read: if isSigned()
        allow create: if (isSigned()
                          && userId == request.auth.uid)
      }

      match /readings/{postId} {
        allow create: if (isSigned()
                          && userId == request.auth.uid)
      }

      match /shares/{postId} {
        allow create: if (isSigned()
                          && userId == request.auth.uid)
      }

      match /bookmarks/{postId} {
        allow write, read: if (isSigned()
                          && userId == request.auth.uid)
      }

      match /subscriptions/{subscriptionId} {
        allow write: if (isSigned()
                          && userId == request.auth.uid)
        allow read: if isSigned()
      }

      match /subscribers/{subscriberId} {
        allow write: if (isSigned()
                          && userId == request.auth.uid)
        allow read: if isSigned()
      }

    }  

  }
  
}